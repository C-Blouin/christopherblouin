@charset "utf-8";

/* Font Imports for Sintony, IBM Plex Monospace & Raleway */
@import url('https://fonts.googleapis.com/css2?family=Sintony:wght@400;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=IBM+Plex+Mono:wght@100;200;300;400;500;600;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Raleway:wght@800&display=swap');

html {
  box-sizing: border-box;
  width: 100%;
  scroll-behavior: smooth;
}

/* Target all elements and apply the border-box property to them. */
*,
::before,
::after {
  box-sizing: border-box;
}

/* Defining root variables to stay consistent with portfolio theme. */
:root {
  --dark-slate: #211e1e;
  --light-slate: #ccc4c4;
  --lighter-slate: #eee8e8;
  --light-brown: #463d3d;
  --dark-brown: #2e2828;
  --card-background: #2c2727;
  --secondary-color: #e6963b;
  --scroll-bar-color: #e6891f;
  --hover-tint: rgba(230, 150, 59, 0.1);
  /* Define root font families. */
  --font-heading: 'Raleway', sans-serif;
  --font-sintony: 'Sintony', sans-serif;
  --font-mono: 'IBM Plex Mono', monospace;
  /* Define typographic variables. */
  --font-xxs: 12px;
  --font-xs: 13px;
  --font-sm: 14px;
  --font-md: 16px;
  --font-lg: 18px;
  --font-xlg: 20px;
  --font-xxlg: 22px;
  --section-heading: 32px;
  --sub-heading: 24px;
  /* Navigation variables */
  --nav-height: 100px;
  --nav-scroll-height: 70px;
  /* Border variables. */
  --border-radius: 0.25rem;
  --button-border: 1px solid var(--secondary-color);
  /* Global transition variable to keep all animations consistent. */
  --transition: all 0.2s ease-in-out;
  /* Box shadow variables. */
  --box-shadow: inset 3px 4px 6px rgba(37, 37, 37, 0.35);
  --project-card-shadow: 10px 0 25px -12px #151516;  
}

/* For users that don't like animations or motion in the browser, disable all these properties. */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* Body styles, setting the global font size, removing escaping margins. */
body {
  font-size: 100%;
  margin: 0;
  width: 100%;
  min-height: 100%;
  overflow-x: hidden;
  -webkit-font-smoothing: antialiased;
  /* Global line height */
  line-height: 1.4;
  /* Set global font styles to the body element.  */
  font-family: var(--font-mono);
  color: var(--light-slate);
  background-color: var(--dark-slate);
}

/* Start of scrollbar styles for browsers that support these styles. */

body::-webkit-scrollbar {
  width: 7px; /* width of the entire scrollbar */
}

body::-webkit-scrollbar-track {
  background: transparent; /* color of the tracking area */
}

body::-webkit-scrollbar-thumb {
  /* Adjust the colour of the scroll thumb */
  background-color: var(--scroll-bar-color); 
  /* The roundness of the scroll thumb. */
  border-radius: 25px;
  /* The scrollbar height. */
  height: 2rem;
}

/* End of scrollbar styles. */

/* If the user selects any body copy or elements on the page, adjust the font and background colours. */
*::selection {
  background-color: var(--light-brown);
  color: var(--lighter-slate);
}

/* Combination selector for all primary heading elements */
h1,
h2,
h3,
h4,
h5,
h6 {
  /* Set the font-family to the heading variable in the root. */
  font-family: var(--font-heading);
  font-weight: 800;
  /* Consistent colouring of all headings to the light-slate variable. */
  color: var(--lighter-slate);
}

/* Set the font-family of all paragraph and anchor elements to the sintony font family variable in the root. */
p,
a {
  font-family: var(--font-sintony);
}

/* Remove default margins and padding to allow for more control over styles later on. */
h1,
h2,
h3,
h4,
h5,
h6,
ol,
ul,
li {
  margin: 0;
  padding: 0;
}

/* Set paragraph line height, overwriting the body line-height. */
p {
  line-height: 1.65;
  margin-top: 1em;
}

/* Start of Navigation Styles */

header {
  /* Set the display to flex so all children elements will be easily controlled. */
  display: flex;
  justify-content: space-between;
  /* Align all the content to be consistent of the cross axis. */
  align-items: center;  
  position: fixed;
  top: 0;
  width: 100%;
  height: var(--nav-height);
  /* Allow the header to be slightly see through creating an overlay appearance. */
  background-color: rgba(33, 30, 30, 0.85);
  /* Blur the header background slightly with a backdrop filter. */
  backdrop-filter: blur(10px);
  filter: none;
  /* Place the header above all elements in the stack order. */
  z-index: 99;
  /* Add a transition variable as this will be used in combination with JavaScript. */
  transition: var(--transition);
}

/* Control all navigation children inside the header. */
header nav {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0px 50px;
  width: 100%;
}

/* Remove the deafult text decoration from all of the anchor elements on the document. */
.navigation__links ol li a,
#resume-button,
#hero .hero-button,
.social-links-list a,
#contact-container div a,
.project-title h3 a,
.project-image a,
p > strong a,
p > strong a::after {
  text-decoration: none;
}

/* Display the navigation links container as flex and align the container. */
.navigation__links {
  display: flex;
  align-items: center;
}

/* Display the list of links in the navigation container as flex, aligning the children and removing default margins, padding, and list-style properties. */
.navigation__links ol {
  display: flex;
  -webkit-box-pack: justify;
  justify-content: space-between;
  -webkit-box-align: center;
  align-items: center;
  padding: 0px;
  margin: 0px;
  list-style: none;
}

/* List item styles within the navigation container. */
.navigation__links ol li {
  /* Add some slight white-space between each link with margins. */
  margin: 0 0.5px;
  font-size: var(--font-sm);
  /* Remove the default bullet point styles from the list-item elements */
  list-style: none;
}

.navigation__links ol li,
.navigation__links ol li a,
.navigation__links ol li a::before,
.navigation__links #resume-button {
  /* Allow the links in the navigation to dynamically adjust the font sizing depending on the viewport width using the clamp function. */
  font-size: clamp(var(--font-xs), 5vw, var(--font-sm));
}

/* Add some padding and letter spacing of the anchor elements wrapped in the links container. */
.navigation__links ol li a {
  padding: 10px 15px;
  letter-spacing: 0.3px;
}

/* Navigation anchor font family styles */
.navigation__links ol li a,
.navigation__links #resume-button {
  font-family: var(--font-mono);
}

/* Links colour */
.navigation__links ol li a,
#resume-button {
  color: var(--light-slate);
  /* Set up a transition for the link hover effect. */
  transition: var(--transition);
}

/* Colour the navigation links to the secondary colour variable whenever they are hovered. */
.navigation__links ol li a:hover {
  color: var(--secondary-color);
}

.navigation__links ol li a.active {
  color: var(--secondary-color);
}

/* Styles for the resume button in the navigation bar. */
.navigation__links #resume-button {
  margin: 0 0 0 15px;
  cursor: pointer;
  background-color: transparent;
  padding: 0.75rem 1rem;
  border: var(--button-border);
  border-radius: 0.25rem;
  color: var(--secondary-color);
}

/* Resume button hover styles. */
.navigation__links #resume-button:hover {
  outline: none;
  background-color: var(--hover-tint);
}

/* End of Navigation Styles. */

/* Auto center the header nav, #content container, and footer. */
header nav,
#content,
footer {
  margin: 0 auto;
  width: 100%;
}

/* Add some padding the the entire main content section */
main {
  padding: 0 50px;
  min-height: 100vh;
}

/* Set a max width that the content can fit into. This is applied to the #content container wrapping all the primary page content. */
#content {
  max-width: 1600px;
}

/* Width sizing of the project paragraphs. */
#featured-projects > p,
#projects > p {
  max-width: 650px;
  margin: 1em auto;
}

/* Center text of the project page & experience page. */
#experience,
#featured-projects > h2,
#featured-projects > p,
#projects > h2,
#projects > p
 {
  text-align: center;
}

/* Add a divider between the primary projects heading and intro paragraph content. */
#featured-projects > p::before {
  content: '';
  display: block;
  max-width: 15%;
  margin: 0 auto 1em auto;
  height: 1px;
  text-decoration: underline 1px var(--secondary-color);
  background-color: #e6963b;
}

/* Set a max width on all primary sections so content appears consistent across all pages. */
#hero,
#about,
#experience,
#featured-projects,
#projects,
#contact-container {
  max-width: 1000px;
}

/* Add some whitespace to experience, featured-projects, and contact sections with a margin-top */
#about,
#experience,
#featured-projects,
#contact-container {
  margin-top: 6rem;
}

/* Start of Primary Hero Styles */

#hero {
  /* Set the min-height of the hero container */
  min-height: 100vh;
  /* Display as grid */
  display: grid;
  /* Set up column grid tracks, creating 8 equal columns with 1 fractional unit of space each. */
  grid-template-columns: repeat(8, 1fr);
  align-items: center;
  padding-top: 15rem;  
}

/* Position the primary hero content within the hero section */
.hero-content {
  /* Start at the 1st column, end at the 8th. */
  grid-area: 1 / 1 / 1 / 9;
  z-index: 2;
}

/* Remove default padding and margins from the figure containing the primary profile bitmoji image. */
figure {
  padding: 0;
  margin: 0;
  z-index: 1;
}

/* Hero Profile Picture Styles */
.profile-picture {
  /* Set the image to display block to allow for more control over it's style properties. */
  display: block;
  /* Set a max-width on the image. */
  max-width: 100%;
  /* Keep the aspect ratio contained in the width container. */
  object-fit: contain;
  /* Positioning the container starting at the 8th column and ending at the 8th. */
  grid-area: 1 / 8 / 1 / 9;
  /* Set a fixed width and height to the image container. */
  width: 340px;
  height: 340px;
  /* Hide any potential overflowing issues. */
  overflow: hidden;
  /* Round the image container with border-radius. */
  border-radius: 50%;
}

/* Profile image styles. */
.profile-picture img {
  display: inline;
  margin: 0 auto;
  height: 100%;
  width: auto;
}

/* Add top and bottom padding to all sections and center all content inside each section container. */
section {
  margin: 0 auto;
  padding: 85px 0;
}

/* Hero primary heading styles. */
#hero h1 {
  font-size: clamp(var(--font-lg), 5vw, var(--font-xlg));
  color: var(--secondary-color);
  font-family: var(--font-mono);
  font-weight: 200;
}

/* Hero sub heading styles */
#hero h2 {
  font-size: clamp(40px, 8vw, 72px);
  /* Create white space between the primary heading. */
  margin-top: 0.75rem;
}

/* Set a fixed width to the hero section paragraph content. */
.hero-sub-text {
  max-width: 620px;
  hyphens: auto;
}

/* Apply a colour change to all elements with the class .highlight. */
.highlight {
  color: var(--secondary-color);
}

.hero-heading-hightlight {
  color: var(--secondary-color);
}

.dot {
    margin-left: 0.125rem;
}

/* Allow all the section headings to dynimcally scale based on the users device viewport width. */
.section-heading {
  width: 100%;
  font-size: clamp(26px, 5vw, var(--section-heading));
}

/* Hero & Contact Button Styles. */
#hero .hero-button,
#contact-button {
  color: var(--secondary-color);
  border: var(--button-border);
  border-radius: var(--border-radius);
  padding: 1rem 1.75rem;
  font-size: var(--font-md);
}

/* Add the root tint variable on hover to indicate to the user that the button is clickable. */
#hero .hero-button:hover,
#contact-button:hover {
  outline: none;
  background-color: var(--hover-tint);
}

#hero .hero-button,
.social-links-list a,
#contact-button {
  cursor: pointer;
  /* Set up transition for the buttons. */
  transition: var(--transition);
}

/* Inline block to prevent link buttons from spanning the entirety of the page. */
.hero-button,
#contact-button {
  display: inline-block;
}

/* Add some white space between the buttons. */
#contact-button {
  margin-top: 1em;
}

.hero-button,
.hero-link-group {
  margin-top: 3rem;
}

/* End of Hero Styles */


/* Start of Social Link Styles */

/* Set the social links container to flex and space out the children elements. */
.social-links-list {
  display: flex;
  flex-direction: row;
  gap: 1.5rem;
}

/* Remove default list-style properties, padding, and margins. */
.social-links-list li {
  list-style: none;
  padding: 0;
  margin: 0;
}

/* Social list anchor colour and transitions. */
.social-links-list a {
  border: none;
  color: var(--light-slate);
  transition: all 0.3s ease-in-out;
}

/* Set the anchor icon colour to the secondary-color variable from the root. */
.social-links-list a:hover {
  color: var(--secondary-color);
}

/* Contact section social links container styles. */
#contact-links-container {
  /* Display the element as flex so the children (icons) space correctly and are aligned in uniformed fashion. */
  display: flex;
  justify-content: center;
  margin: 2rem 0 1rem 0;
}

/* Contact unordered list styles. */
.contact-links {
  /* Display the unordered list elements as flex. */
  display: flex;
  /* Align and center the list items icons. */
  justify-content: center;
  align-items: center;
  /* Remove the default list styles */
  list-style-type: none;
  /* Add a gap between each icon (flex item). */
  gap: 2rem;
}

.contact-links a {
  color: var(--light-slate);
}

/* Set up a transition for the contact links icon svgs. */
#contact-links-container .contact-links a svg {
  transition: all 0.3s ease-in-out;
}

/* On icon hover, the elements will scale up slighty and rotate 5 degrees and change colour to indicate that they are clickable elments. */
#contact-links-container .contact-links a:hover svg {
  transform: scale(1.05) rotate(5deg);
  color: var(--secondary-color);
}

/* Center and align footer elements */
footer {
  text-align: center;
  padding-top: 100px;
}

footer div {
  display: flex;
  justify-content: center;
}

/* Center all text content residing inside the parent skills wrapper */
.skills-wrapper {
  text-align: center;
}

/* Display the skills list as flex with wrapping to keep a responsive design at smaller device widths. */
.skills-list {
  padding: 2rem 0 3rem 0;
  display: flex;
  /* Wrap new line if there is overflow. */
  flex-wrap: wrap;
  /* Space the list items with gap. */
  gap: 1rem; 
  list-style: none;
  justify-content: center;
  /* Center the content in the max-width container. */
  max-width: 900px;
  margin: 0 auto;
}

/* Skill list item styles, this block of code adds a subtle inset box shadow with some basic colouring and rounding styles. */
.skills-list li {
  font-family: var(--font-mono);
  font-size: var(--font-sm);
  padding: 0.5rem 0.75rem;
  background-color: var(--light-brown);
  box-shadow: var(--box-shadow);
  border-radius: 0.25rem;
  /* Set up a transition for each item. */
  transition: var(--transition);
}

/* On hover of the skill-list items, the items will translate in the DOM and utilize a transparent background. */
.skills-list li:hover {
  transform: translateY(-0.2rem);
  color: var(--secondary-color);
  background-color: transparent;
  outline: 1px solid var(--secondary-color);
}

.skills-list:nth-of-type(2) {
    padding: 2rem 0 3rem 0;
}

/* Global paragraph and paragraph anchor styles. */
p > strong {
  color: var(--lighter-slate);
}

p > strong a,
.featured-description > p > a {
  display: inline-block;
}

.featured-description > p > a {
  text-decoration: none;
  color: var(--secondary-color);
}

/* About Section paragraph anchor styles. */
p > strong a,
p > strong a::after,
.featured-description > p > a::after {
  color: var(--secondary-color);
  transition: var(--transition);
}

/* This code will allow a smooth left to right underline to transition under the anchor elements */
p > strong a::after, .featured-description > p > a::after {
  /* Set empty content. */
  content: '';
  /* Display block and apply height and width properties. */
  display: block;
  /* Set the width to 0 as it will be controlled by the on hover of the links. */
  width: 0px;
  height: 1px;
  /* Position the transition relative to the parent position. */
  position: relative;
  bottom: 2px;
  /* Set colour of the transitioned element and opacity. */
  background-color: var(--secondary-color);
  transition: var(--transition);
  opacity: 0.5;
}

/* Set the above anchor styles width to 100% to display the transition effect on hover. */
strong a:hover::after,
.featured-description > p > a:hover::after {
  width: 100%;
}

/* Project section heading styles. */

#projects > h2,
#projects > p {
  margin-top: 1em;
}

.project-heading {
  padding: 0;
}

#main-projects h2 {
  margin-bottom: 40px;
}


/* Set up a grid area to place the featured projects card content into */
.featured-projects-card {
  display: grid;
  /* Create 12 equal columns on the main axis. */
  grid-template-columns: repeat(12, 1fr);
  position: relative;
  margin: 2rem 0 10rem 0;
  /* Align the text content and image elements vertically */
  -webkit-box-align: center;
  align-items: center;
}

/* Position the primary card content in the 1st column and end at the 6th column. */
.featured-content {
  grid-area: 1 / 1 / 1 / 6;
  /* Set the z-index to 2 to ensure the content will appear overtop of other elements on smaller device sizes. */
  z-index: 2;
}

/* Start of featured heading styles. */
.featured-content h3 {
  /* Add spacing and dynamic font resize with the clamp function for smaller device widths. */
  margin-bottom: 2rem;
  font-size: clamp(24px, 5vw, 28px);
}



/* Heading colour and hover effects. */
.project-title h3 a {
  color: var(--lighter-slate);
}

.project-title h3 a:hover {
  color: var(--secondary-color);
  transition: var(--transition);
}

/* End of featured heading styles. */

.project-image {
  /* Position the featured project image to the right side of the grid area. Start at the 7th column ending at the 13th */
  grid-area: 1 / 7 / 1 / 13;
  border-radius: var(--border-radius);
  /* Set the z-index to 1, less than the content stack order, this way the image will appear underneath the content at smaller screen sizes. */
  z-index: 1;
  position: relative;
  overflow: hidden;
  box-shadow: 10px 0 25px -15px var(--dark-slate);
}

/* Target the anchor elements that wrap the images in the featured projects card containers. */
.project-image a {
  display: block;
  width: 100%;
  height: 100%;
  /* Position the element as relative to allow for more control over allowing the element to be clickable over the entirety of the parent container. */
  position: relative;
  background: var(--light-brown);
  align-content: center;
}

/* Using the before pseudo selector on the anchor image element, I can use absolute position to allow the entire image to be clickable by setting a width and height of 100% and positioning it on the top and left side of the container. */
.project-image a::before {
  content: '';
  /* This element will be positioned absolutely to the relative container above. */
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  /* Position the link wrap over the image with z-index. */
  z-index: 3;
  transition: var(--transition);
  background: var(--card-background);
  /* Create an overlay ontop of the images. */
  mix-blend-mode: exclusion;
  overflow: hidden;
}

/* On image hover, reveal the original image by removing the background colour. */
.project-image a:hover::before {
  transition: 0.3s ease-in-out;
  background: transparent;
  box-shadow: 50px 0 25px -15px var(--dark-slate);
}

/* Make the image fill its container */
.project-image a img {
  display: block;
  width: 100%;
  height: 100%;
  object-fit: cover;
}


/* Second featured card styles, these styles allow the positioning of the content to appear flipped creating a more unique design layout. */
.featured-projects-card:nth-of-type(2) .featured-content,
.featured-projects-card:nth-of-type(4) .featured-content {
  grid-area: 1 / 8 / 1 / 13;
  /* Since the content is positioned to the right, I also want the text and content to appear on the right. */
  text-align: right;
}

.featured-projects-card:nth-of-type(2) .project-image,
.featured-projects-card:nth-of-type(4) .project-image {
  grid-area: 1 / 1 / 1 / 7;
}

.featured-projects-card:nth-of-type(2) .featured-content ul,
.featured-projects-card:nth-of-type(4) .featured-content ul {
  justify-content: right;
}

.featured-projects-card:nth-of-type(4) {
  margin-bottom: 0;
}


/* Featured card technology list styles. */
.technology-list,
.resource-links {
  /* These styles allow the unordered list items in the featured cards to appear in a uniform list. */
  display: flex;
  list-style: none;
  gap: 20px;
  flex-wrap: wrap;
  position: relative;
  z-index: 2;
  /* White space above the list. */
  margin-top: 25px;
  padding: 0px;
}

/* Set the font colour of the technology list items, as well as the font size to the extra small variable from the root. */
.technology-list {
  color: var(--secondary-color);
  font-size: var(--font-xs);
}

.resource-links {
  font-size: var(--font-sm);
}

.resource-links li a {
  color: var(--light-slate);
}

.resource-links li a:hover {
  color: var(--secondary-color);
  transition: var(--transition);
}

/* Other Projects Section Styles */
.project-cards-wrapper {
    /* Create a 3 column card layout for the other projects section */
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    /* Add some white space between the cards */
    gap: 1rem;
    padding-top: 2rem;
}

.project-description p {
  hyphens: auto;
}
 
/* Remove default list styles. */
.projects-grid ul {
    list-style: none;
}

/* Contact Section Styles. */
#contact-container {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  text-align: center;
}

/* Set a max-width on the contact content */
.contact-content {
  max-width: 750px;
  margin: 0 auto;
  text-align: center;
}

/* Hide the mobile menu icons when wider device widths. */
#open-menu,
#close-menu {
  display: none;
  cursor: pointer;
}


@media screen and (max-width: 1100px) {
  
  /* Convert the hero grid layout to a single column on smaller screens. */
  #hero {
    grid-template-columns: 1fr;
  }

  #hero,
  #about {
    text-align: center;
  }

  .hero-sub-text {
    margin: 0 auto;
    margin-top: 1rem;
  }

  /* Esnure correct stacking of elements in the single column layout. */
  .hero-content {
    grid-area: auto;
  }

  /* Center the profile image as it is now in a single column layout. */
  .profile-picture {
    grid-area: auto;
    max-width: 100%;
    margin: 4rem auto 0 auto;
    width: 320px;
    height: 320px;
  }
}

@media screen and (max-width: 900px) {
  #about,
  #experience,
  #featured-projects,
  #contact-container {
    margin-top: 1rem;
  }
}


/* Media query to control the mobile navigation on device widths of 820px of the viewport. */

@media screen and (max-width: 820px) {

  .profile-picture {
    width: 280px;
    height: 280px;
  }

  /* Apply blur to the main html content when the navigation menu contains the active blur class. */
  .blur {
    transition: filter var(--transition);
    filter: blur(5px);
  }

  /* Display the open hamburger menu as inline so that it will apear aligned with the navigation bar elements */
  #open-menu {
    display: inline;
    width: 1.5rem;
    position: relative;
  }

  /* Position the close icon absolutely in the top right corner, I did this as I want the close icon to appear out of the way of the navigation links in the pop out window navigation. */
  #close-menu {
    display: block;
    position: absolute;
    top: 24px;
    right: 24px;
    z-index: 8;
  }

  /* Mobile icon size and colour styles. */
  #open-menu,
  #close-menu {
    color: var(--secondary-color);
    font-size: 48px;
  }

  /* Mobile open hamburger styles. These styles use the before and after pseudo selectors to form a unique hamburger icon through specifically defined widths. */

  #open-menu::before {
    width: 2rem;
    bottom: 10px;
  }

  #open-menu:after {
    width: 1rem;
    top: 10px;
  }

  #open-menu::before,
  #open-menu::after {
    content: '';
    position: absolute;
    right: 0;
  }

  #open-menu,
  #open-menu::before,
  #open-menu::after {
    height: 2.5px;
    background-color: var(--secondary-color);
    border-radius: 2rem;
  }


  /* At device widths of 820px, the header navigation links will be positioned outside of the viewport, through some javascript, I will add an active class which will allow this element to slide in and out of the viewport when the user clicks on the mobile icons. */
  .navigation__links {
    display: flex;
    -webkit-box-pack: center;
    justify-content: center;
    -webkit-box-align: center;
    align-items: center;
    /* Position fixed to place the menu off the screen. */
    position: fixed;
    top: 0px;
    bottom: 0px;
    right: 0px;
    /* The width of the menu will always be 75% of the vertical viewport width, with the content eating up 400px of space. */
    width: min(75vw, 400px);
    /* Set the menu height to occupy 100% of the viewport height. */
    height: 100vh;
    outline: 0px;
    background-color: var(--dark-brown);
    box-shadow: -10px 0px 30px -35px var(--light-brown);
    /* Make sure the menu is always visible over the other elements in the document. */
    z-index: 9;
    /* Transform to allow the menu to slide in and out of the viewport. */
    transform: translateX(100vw);
    /* Hide the menu with visibility: hidden */
    visibility: hidden;
    /* Set up a transition so when the active class is added later on it will smoothly slide the menu in and out of the viewport. */
    transition: var(--transition);
  }

  /* When the active class is added to the navigation links, set the visibility to visible and slide the menu back into the viewport with a transform translate. */
  .navigation__links.active {
    visibility: visible;
    transform: translateX(0vw);
  }

  /* Set the links to flex direction column as we are on mobile devices now and need the links to appear in vertical order. */
  .navigation__links ol,
  #resume-button {
    flex-direction: column;
  }

  /* White space at the bottom of each menun link list item. */
  .navigation__links ol li {
    margin: 0px auto 30px;
  }

  /* Center the resume button inside the mobile menu and add some spacing through padding. */
  .navigation__links #resume-button {
    padding: 1rem 3rem;
    margin: 20% auto 0px;
    width: max-content;
  }

  /* Display inline-block on the a elements to allow them to center correctly. */
  .navigation__links ol a {
    display: inline-block;
    position: relative;
    width: 100%;
    padding: 3px 20px 10px;
  }

  /* If the navigation link is active, it will appear in the secodary colour from the root. */
  .navigation__links ol a:active {
    color: var(--secondary-color);
  }


  /* Allow the navigation links font sizing to scale based on the viewport width using the clamp function, it allows for less code when building out responsive designs. */
  .navigation__links ol li,
  .navigation__links ol li a {
    font-size: clamp(var(--font-xs), 5vw, var(--font-lg));
  }

  
  .navigation__links #resume-button {
    font-size: clamp(var(--font-xs), 5vw, var(--font-md));
  }


  /* Add some left and right padding on the header and main elements when on smaller device screen sizes. */
  header,
  main {
    padding: 0 25px;
  }

  header nav {
    padding: 0;
  }

  /* Create a two card layout in the other projects card wrapper when at 820px device width. */
  .project-cards-wrapper {
    grid-template-columns: repeat(2, 1fr);
  }
}

/* All styles in here will be applied once the screen is 768px in device width of the viewport. */

@media screen and (max-width: 768px) {

  #contact-container {
    margin-top: 8rem;
  }

  /* Align children of the featured projects cards at 768px device width. */
  .featured-projects-card {
    align-items: center;
    margin: 2rem 0 4rem 0;
  }

  /* Center all project card content into a single column layout */
  .featured-content,
  .featured-projects-card:nth-of-type(2) .featured-content,
  .featured-projects-card:nth-of-type(4) .featured-content  {
    grid-area: 1 / 1 / 1 / 13;
    padding: 40px 40px 30px;
    text-align: left;
  }

  /* Center the featured projects image into the single column layout to create an overlapping layout on smaller screens. */
  .project-image,
  .featured-projects-card:nth-of-type(2) .project-image,
  .featured-projects-card:nth-of-type(4) .project-image {
    grid-area: 1 / 1 / 1 / 13;
    opacity: 0.2;
    height: 100%;
  }

  /* Align the second featured project content to the left on small screens. */
  .featured-projects-card:nth-of-type(2) .featured-content ul,
  .featured-projects-card:nth-of-type(4) .featured-content ul {
    justify-content: left;
  }

  /* Add contrast by adding some darkness to the featured project card images so the text is more visible. */
  .project-image a::before {
    mix-blend-mode: hard-light;
}

  /* Allow the anchor in the project title container to be positioning static across the container. */
  .project-title a {
    position: static;
  }

  /* This creates a link over the entire featured project card by using absolute positioning and spanning the width and height properties to 100%. */
  .project-title h3 a::before {
    content: '';
    display: block;
    position: absolute;
    z-index: 0;
    width: 100%;
    height: 100%;
    top: 0px;
    left: 0px;
  }
}

h3.project-heading {
  font-size: var(--font-lg);
}

/* Apply these styles when the device width is a max-width of 600px */
@media screen and (max-width: 600px) {

  /* Shrink the nav menu a bit more at 600px max-width in the viewport. */
  .navigation__links {
    width: 70vw;
  }

  /* Center list items and social links. */
  .skills-list {
    font-size: var(--font-xs);
    justify-content: center;
  }

  .hero-link-group {
    justify-content: center;
    align-items: center;
    flex-direction: column;
  }

  .social-links-list {
    margin-top: 5rem;
  }

  p > strong a::after {
    display: none;
  }

  p > strong a:hover {
    text-decoration: underline;
  }

  /* Add screen widths of 600px, the other project wrapper will display cards in a single column layout. */
  .project-cards-wrapper {
    grid-template-columns: repeat(1, 1fr);
  }

  .featured-content,
  .featured-projects-card:nth-of-type(2) .featured-content,
  .featured-projects-card:nth-of-type(4) .featured-content {
    padding: 2rem 1.75rem;
  }
}

/* Remove default text-decoration and colour the project heading acnhors. */
.project-heading a {
  text-decoration: none;
  color: var(--lighter-slate);
}

/* Allow for the entirety of the project card to be clickable through absolute positioning and setting the height and widths to 100% of the parent element as the parent is positioned relatively. */
.project-heading a::before {
  display: block;
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
}


/* Position all content in the other project cards to appear centered and stacking elements on top of one another. */
.project-card {
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: center;
  -webkit-box-align: center;
  /* Spacing and colour properties. */
  background-color: var(--card-background);
  padding: 2rem 1.75rem;
  border-radius: 0.25rem;
  /* Apply a subtle box shadow effect to each card. */
  box-shadow: var(--project-card-shadow);
  /* Set up a transition for the project cards to use when hovered over. */
  transition: var(--transition);
}

/* Translate the card slightly to signify its clickable. */
.project-card:hover {
    transform: translateY(-0.35rem);    
  }

/* Styles for the top portion of the other projects cards, separate the folder icon and project links in this container using flex and space-between */
.project-top {
  display: flex;
  justify-content: space-between;
  /* Align the children vertically */
  align-items: center;
  margin-bottom: 25px;
}

/* Override previous margin top on the porject links the viewport width is 600px. */
.project-links ul {
  margin-top: 0;
}

/* Folder icon styles, adjusting the colour and size. */
.folder-icon svg {
  width: 40px;
  height: 40px;
  color: var(--secondary-color);
}

/* The heading in the cards will change colour alongside a transition. */
.project-card h3 a:hover {
  color: var(--secondary-color);
  transition: var(--transition);
}

.project-card div.project-description {
  /* Add auto hyphens to the project descriptions to allow for fluid text wrapping */
  hyphens: auto;
  font-size: var(--font-sm);
}

/* Start of Experience & Education Section Styles */
.experience-heading {
  color: var(--secondary-color);
  font-family: var(--font-mono);
  font-style: normal;
  font-weight: 300;
}

/* Create a two column layout within the education-grid container */
#education-grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 3rem;
  justify-content: center;
  align-items: center;
  align-content: center;
  padding: 4rem 0 6rem 0;
}

/* Styles for the education-grid card items. */
#education-grid div {
  text-align: center;
  padding: 3rem 2rem;
  font-family: var(--font-mono);
  /* Key properties for the background gradient transition effect */
  transition: var(--transition);
  /* Fallback background color. */
  background: rgb(46, 40, 40);
  /* Apply a linear gradient which will transition into another variant of this gradient on hover later. */
  background: linear-gradient(
    to top right,
    rgba(46, 40, 40, 1) 0%,
    rgb(39, 36, 36) 52%,
    rgba(42, 38, 38, 1) 100%
  );
  background-size: 200% auto;
  border-radius: 0.25em;
}

/* On card hover, the background gradient image will add a subtle color change to the existing gradient. */
#education-grid div:hover {
  /* Fallback background color */
  background-color: #1d1d1d;
  background: rgb(46, 40, 40);
  background: linear-gradient(
    to bottom left,
    rgba(34, 31, 31, 1) 0%,
    rgba(42, 38, 38, 1) 63%,

    rgba(46, 40, 40, 1) 100%
  );
}

/* Increase the scale and translate the x position of the education cards on hover. */
#education-grid div:nth-of-type(1):hover {
  transform: scale(1.02) translateX(-0.6rem);
}

#education-grid div:nth-of-type(2):hover {
  transform: scale(1.02) translateX(0.6rem);
}

/* Dynamically size the education h3 heading based on viewport width. */
#education-grid div h3 {
  font-size: clamp(22px, 5vw, var(--sub-heading));
}

/* Remove default list styles. */
#education-grid > div ul {
  list-style-type: none;
}

/* The list items are not allowed to wrap text or overflow two lines in the document, but rather allow each item to occupy it's own line. */
#education-grid > div ul li {
  display: inline-block;
  white-space: nowrap;
  margin: 0.5rem;
}

/* When the device width reaches a max-width of 768px, apply the following styles. */
@media screen and (max-width: 768px) {

  /* Convert the education-grid to a single column layout and adjust the gap spacing when displaying on screens of 768px in width. */
  #education-grid {
    grid-template-columns: repeat(1, 1fr);
    gap: 3rem 4rem;
  }

  /* Adjust inner education card padding */
  #education-grid div {
    padding: 1.75rem 1rem;
  }

}

/* End of Experience & Education Section Styles */


/* Start of Contact Form Styles */

/* Set the width of the form contents */
#contact-form {
  max-width: 720px;
  margin: 0 auto;
  padding: 1.2em 1em;
}

/* Overwriting bootstrap form styles of the form-control class. */
.form-control {
  display: block;
  width: 100%;
  padding: 0.375rem 0.75rem;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  color: var(--lighter-slate);
  background-color: var(--dark-brown);
  background-clip: padding-box;
  border-radius: .25rem;
  border: none;
  outline: none;
}

.form-control::-webkit-input-placeholder {
  color: var(--light-slate);
}

.form-control:focus {
  color: var(--secondary-color);
  border-color: var(--secondary-color);
  background-color: transparent;
  outline: 0;
  transition: var(--transition);
  box-shadow: 0 0 0 0.15rem rgba(230, 150, 59, 0.95);
}

.row {
  padding: 1rem 0;
}

#contact-button {
  background-color: transparent;
  margin-top: 2rem;
  text-decoration: none;
}